/* Lexical Part */

_digit       : '0'-'9' ;
_lower       : 'a'-'z' ;
_upper       : 'A'-'Z' ;
_char        : _lower | _upper ;
_dash        : '-' ;
_identchar   : _char | _dash ;
_uint64      : '1'-'9' {_digit} ;
_lineComment : '#' { . } '\n';

ident  : _identchar {_identchar} ;
uint64 : _uint64 ;
dot    : '.' ;
tuplet : '/' _uint64 ;

!comment    : _lineComment ;
!whitespace : ' ' | '\t' | '\n' | '\r' ;


/* Syntax Part */

<<
import (
    "github.com/mgnsk/gong/internal/ast"
    "github.com/mgnsk/gong/internal/token"
)
>>

Expr
    : Assignment
    | Track
    | Command
    ;

Assignment
    : ident "=" uint64          << ast.Assignment{$T0.IDValue(), $T2.IDValue()}, nil >>
    ;

Track
    : empty
    | NoteList Track            << ast.NewTrack($0.(ast.NoteList), $1), nil >>
    ;

NoteList
    : ident PropertyList        << ast.NewNoteList($T0.IDValue(), $1), nil >>
    ;

PropertyList
    : empty
    | uint64 PropertyList       << ast.NewPropertyList($T0, $1), nil >>
    | dot PropertyList          << ast.NewPropertyList($T0, $1), nil >>
    | tuplet PropertyList       << ast.NewPropertyList($T0, $1), nil >>
    ;

// TODO multiple arguments
Command:
    : "bar" ident               << ast.Command{"bar", $T1.IDValue()}, nil >>
    | "play" ident              << ast.Command{"play", $T1.IDValue()}, nil >>
    | "end"                     << ast.Command{"end", ""}, nil >>
    ;
