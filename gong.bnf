/* Lexical Part */

_digit       : '0'-'9' ;
_lower       : 'a'-'z' ;
_upper       : 'A'-'Z' ;
_char        : _lower | _upper ;
_identChar   : _char | '-' ;
_uint        : '0' | '1'-'9' {_digit} ;
_stringLit   : '"' { . } '"' ;
_lineComment : '/' '/' { . } '\n';

multiNote : _identChar {_identChar} ;
stringLit : _stringLit ;
sharp     : '#' ;
flat      : '$' ;
uint      : _uint ;
dot       : '.' ;
tuplet    : '/' _uint ;

!comment    : _lineComment ;
!whitespace : ' ' | '\t' | '\n' | '\r' ;

/* Syntax Part */

<<
import (
    "github.com/mgnsk/gong/internal/ast"
    "github.com/mgnsk/gong/internal/parser/token"
)
>>

Expr
    : NoteAssignment
    | Track
    | Command
    ;

NoteAssignment
    : multiNote "=" uint            << ast.NewNoteAssignment($T0, $T2) >>
    ;

Track
    : empty
    | NoteList Track                << ast.NewTrack($0.(ast.NoteList), $1), nil >>
    ;

NoteList
    : multiNote NotePropertyList    << ast.NewNoteList($T0.IDValue(), $1), nil >>
    ;

NotePropertyList
    : empty
    | NoteProperty NotePropertyList << ast.NewNotePropertyList($T0, $1) >>
    ;

NoteProperty
    : sharp
    | flat
    | uint
    | dot
    | tuplet
    ;

Command:
    : CommandName ArgumentList      << ast.NewCommand($T0.IDValue(), $1) >>
    ;

ArgumentList:
    : empty
    | stringLit ArgumentList        << ast.NewArgumentList($T0, $1), nil >>
    | uint ArgumentList             << ast.NewArgumentList($T0, $1), nil >>
    ;

CommandName:
    : "tempo"
    | "channel"
    | "velocity"
    | "program"
    | "control"
    | "bar"
    | "end"
    | "play"
    ;
