// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: DeclList
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			shift(3),  // assign
			shift(4),  // tempo
			shift(5),  // timesig
			shift(6),  // channel
			shift(7),  // velocity
			shift(8),  // program
			shift(9),  // control
			shift(10), // end
			shift(11), // play
			shift(12), // start
			shift(13), // stop
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // empty
			nil,          // terminator
			nil,          // bar
			nil,          // stringLit
			nil,          // {
			nil,          // }
			nil,          // [
			nil,          // ]
			nil,          // char
			nil,          // rest
			nil,          // sharp
			nil,          // flat
			nil,          // accent
			nil,          // ghost
			nil,          // uint
			nil,          // dot
			nil,          // tuplet
			nil,          // letRing
			nil,          // assign
			nil,          // tempo
			nil,          // timesig
			nil,          // channel
			nil,          // velocity
			nil,          // program
			nil,          // control
			nil,          // end
			nil,          // play
			nil,          // start
			nil,          // stop
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // $, reduce: RepeatTerminator
			nil,       // empty
			shift(15), // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			reduce(4), // assign, reduce: RepeatTerminator
			reduce(4), // tempo, reduce: RepeatTerminator
			reduce(4), // timesig, reduce: RepeatTerminator
			reduce(4), // channel, reduce: RepeatTerminator
			reduce(4), // velocity, reduce: RepeatTerminator
			reduce(4), // program, reduce: RepeatTerminator
			reduce(4), // control, reduce: RepeatTerminator
			reduce(4), // end, reduce: RepeatTerminator
			reduce(4), // play, reduce: RepeatTerminator
			reduce(4), // start, reduce: RepeatTerminator
			reduce(4), // stop, reduce: RepeatTerminator
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			shift(16), // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(17), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(18), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(19), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(20), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(21), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(22), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(30), // $, reduce: Command
			nil,        // empty
			reduce(30), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(30), // assign, reduce: Command
			reduce(30), // tempo, reduce: Command
			reduce(30), // timesig, reduce: Command
			reduce(30), // channel, reduce: Command
			reduce(30), // velocity, reduce: Command
			reduce(30), // program, reduce: Command
			reduce(30), // control, reduce: Command
			reduce(30), // end, reduce: Command
			reduce(30), // play, reduce: Command
			reduce(30), // start, reduce: Command
			reduce(30), // stop, reduce: Command
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			shift(23), // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(32), // $, reduce: Command
			nil,        // empty
			reduce(32), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(32), // assign, reduce: Command
			reduce(32), // tempo, reduce: Command
			reduce(32), // timesig, reduce: Command
			reduce(32), // channel, reduce: Command
			reduce(32), // velocity, reduce: Command
			reduce(32), // program, reduce: Command
			reduce(32), // control, reduce: Command
			reduce(32), // end, reduce: Command
			reduce(32), // play, reduce: Command
			reduce(32), // start, reduce: Command
			reduce(32), // stop, reduce: Command
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(33), // $, reduce: Command
			nil,        // empty
			reduce(33), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(33), // assign, reduce: Command
			reduce(33), // tempo, reduce: Command
			reduce(33), // timesig, reduce: Command
			reduce(33), // channel, reduce: Command
			reduce(33), // velocity, reduce: Command
			reduce(33), // program, reduce: Command
			reduce(33), // control, reduce: Command
			reduce(33), // end, reduce: Command
			reduce(33), // play, reduce: Command
			reduce(33), // start, reduce: Command
			reduce(33), // stop, reduce: Command
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: DeclList
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			shift(3),  // assign
			shift(4),  // tempo
			shift(5),  // timesig
			shift(6),  // channel
			shift(7),  // velocity
			shift(8),  // program
			shift(9),  // control
			shift(10), // end
			shift(11), // play
			shift(12), // start
			shift(13), // stop
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // $, reduce: RepeatTerminator
			nil,       // empty
			shift(15), // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			reduce(4), // assign, reduce: RepeatTerminator
			reduce(4), // tempo, reduce: RepeatTerminator
			reduce(4), // timesig, reduce: RepeatTerminator
			reduce(4), // channel, reduce: RepeatTerminator
			reduce(4), // velocity, reduce: RepeatTerminator
			reduce(4), // program, reduce: RepeatTerminator
			reduce(4), // control, reduce: RepeatTerminator
			reduce(4), // end, reduce: RepeatTerminator
			reduce(4), // play, reduce: RepeatTerminator
			reduce(4), // start, reduce: RepeatTerminator
			reduce(4), // stop, reduce: RepeatTerminator
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(26), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(24), // $, reduce: Command
			nil,        // empty
			reduce(24), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(24), // assign, reduce: Command
			reduce(24), // tempo, reduce: Command
			reduce(24), // timesig, reduce: Command
			reduce(24), // channel, reduce: Command
			reduce(24), // velocity, reduce: Command
			reduce(24), // program, reduce: Command
			reduce(24), // control, reduce: Command
			reduce(24), // end, reduce: Command
			reduce(24), // play, reduce: Command
			reduce(24), // start, reduce: Command
			reduce(24), // stop, reduce: Command
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(27), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(26), // $, reduce: Command
			nil,        // empty
			reduce(26), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(26), // assign, reduce: Command
			reduce(26), // tempo, reduce: Command
			reduce(26), // timesig, reduce: Command
			reduce(26), // channel, reduce: Command
			reduce(26), // velocity, reduce: Command
			reduce(26), // program, reduce: Command
			reduce(26), // control, reduce: Command
			reduce(26), // end, reduce: Command
			reduce(26), // play, reduce: Command
			reduce(26), // start, reduce: Command
			reduce(26), // stop, reduce: Command
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(27), // $, reduce: Command
			nil,        // empty
			reduce(27), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(27), // assign, reduce: Command
			reduce(27), // tempo, reduce: Command
			reduce(27), // timesig, reduce: Command
			reduce(27), // channel, reduce: Command
			reduce(27), // velocity, reduce: Command
			reduce(27), // program, reduce: Command
			reduce(27), // control, reduce: Command
			reduce(27), // end, reduce: Command
			reduce(27), // play, reduce: Command
			reduce(27), // start, reduce: Command
			reduce(27), // stop, reduce: Command
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(28), // $, reduce: Command
			nil,        // empty
			reduce(28), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(28), // assign, reduce: Command
			reduce(28), // tempo, reduce: Command
			reduce(28), // timesig, reduce: Command
			reduce(28), // channel, reduce: Command
			reduce(28), // velocity, reduce: Command
			reduce(28), // program, reduce: Command
			reduce(28), // control, reduce: Command
			reduce(28), // end, reduce: Command
			reduce(28), // play, reduce: Command
			reduce(28), // start, reduce: Command
			reduce(28), // stop, reduce: Command
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			shift(28), // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(31), // $, reduce: Command
			nil,        // empty
			reduce(31), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(31), // assign, reduce: Command
			reduce(31), // tempo, reduce: Command
			reduce(31), // timesig, reduce: Command
			reduce(31), // channel, reduce: Command
			reduce(31), // velocity, reduce: Command
			reduce(31), // program, reduce: Command
			reduce(31), // control, reduce: Command
			reduce(31), // end, reduce: Command
			reduce(31), // play, reduce: Command
			reduce(31), // start, reduce: Command
			reduce(31), // stop, reduce: Command
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // $, reduce: DeclList
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			nil,       // assign
			nil,       // tempo
			nil,       // timesig
			nil,       // channel
			nil,       // velocity
			nil,       // program
			nil,       // control
			nil,       // end
			nil,       // play
			nil,       // start
			nil,       // stop
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // $, reduce: RepeatTerminator
			nil,       // empty
			nil,       // terminator
			nil,       // bar
			nil,       // stringLit
			nil,       // {
			nil,       // }
			nil,       // [
			nil,       // ]
			nil,       // char
			nil,       // rest
			nil,       // sharp
			nil,       // flat
			nil,       // accent
			nil,       // ghost
			nil,       // uint
			nil,       // dot
			nil,       // tuplet
			nil,       // letRing
			reduce(3), // assign, reduce: RepeatTerminator
			reduce(3), // tempo, reduce: RepeatTerminator
			reduce(3), // timesig, reduce: RepeatTerminator
			reduce(3), // channel, reduce: RepeatTerminator
			reduce(3), // velocity, reduce: RepeatTerminator
			reduce(3), // program, reduce: RepeatTerminator
			reduce(3), // control, reduce: RepeatTerminator
			reduce(3), // end, reduce: RepeatTerminator
			reduce(3), // play, reduce: RepeatTerminator
			reduce(3), // start, reduce: RepeatTerminator
			reduce(3), // stop, reduce: RepeatTerminator
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(23), // $, reduce: Command
			nil,        // empty
			reduce(23), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(23), // assign, reduce: Command
			reduce(23), // tempo, reduce: Command
			reduce(23), // timesig, reduce: Command
			reduce(23), // channel, reduce: Command
			reduce(23), // velocity, reduce: Command
			reduce(23), // program, reduce: Command
			reduce(23), // control, reduce: Command
			reduce(23), // end, reduce: Command
			reduce(23), // play, reduce: Command
			reduce(23), // start, reduce: Command
			reduce(23), // stop, reduce: Command
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(25), // $, reduce: Command
			nil,        // empty
			reduce(25), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(25), // assign, reduce: Command
			reduce(25), // tempo, reduce: Command
			reduce(25), // timesig, reduce: Command
			reduce(25), // channel, reduce: Command
			reduce(25), // velocity, reduce: Command
			reduce(25), // program, reduce: Command
			reduce(25), // control, reduce: Command
			reduce(25), // end, reduce: Command
			reduce(25), // play, reduce: Command
			reduce(25), // start, reduce: Command
			reduce(25), // stop, reduce: Command
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			reduce(29), // $, reduce: Command
			nil,        // empty
			reduce(29), // terminator, reduce: Command
			nil,        // bar
			nil,        // stringLit
			nil,        // {
			nil,        // }
			nil,        // [
			nil,        // ]
			nil,        // char
			nil,        // rest
			nil,        // sharp
			nil,        // flat
			nil,        // accent
			nil,        // ghost
			nil,        // uint
			nil,        // dot
			nil,        // tuplet
			nil,        // letRing
			reduce(29), // assign, reduce: Command
			reduce(29), // tempo, reduce: Command
			reduce(29), // timesig, reduce: Command
			reduce(29), // channel, reduce: Command
			reduce(29), // velocity, reduce: Command
			reduce(29), // program, reduce: Command
			reduce(29), // control, reduce: Command
			reduce(29), // end, reduce: Command
			reduce(29), // play, reduce: Command
			reduce(29), // start, reduce: Command
			reduce(29), // stop, reduce: Command
		},
	},
}
