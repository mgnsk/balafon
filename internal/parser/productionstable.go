// Code generated by gocc; DO NOT EDIT.

package parser

import (
	"github.com/mgnsk/gong/internal/ast"
	"github.com/mgnsk/gong/internal/token"
)

type (
	ProdTab      [numProductions]ProdTabEntry
	ProdTabEntry struct {
		String     string
		Id         string
		NTType     int
		Index      int
		NumSymbols int
		ReduceFunc func([]Attrib, interface{}) (Attrib, error)
	}
	Attrib interface {
	}
)

var productionsTable = ProdTab{
	ProdTabEntry{
		String: `S' : Expr	<<  >>`,
		Id:         "S'",
		NTType:     0,
		Index:      0,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Expr : Assignment	<<  >>`,
		Id:         "Expr",
		NTType:     1,
		Index:      1,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Expr : Track	<<  >>`,
		Id:         "Expr",
		NTType:     1,
		Index:      2,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Expr : Command	<<  >>`,
		Id:         "Expr",
		NTType:     1,
		Index:      3,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return X[0], nil
		},
	},
	ProdTabEntry{
		String: `Assignment : ident "=" uint64	<< ast.NewAssignment(X[0].(*token.Token).IDValue(), X[2].(*token.Token)) >>`,
		Id:         "Assignment",
		NTType:     2,
		Index:      4,
		NumSymbols: 3,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewAssignment(X[0].(*token.Token).IDValue(), X[2].(*token.Token))
		},
	},
	ProdTabEntry{
		String: `Track : NoteList Track	<< ast.NewTrack(X[0].(ast.NoteList), X[1].(*ast.Track)) >>`,
		Id:         "Track",
		NTType:     3,
		Index:      5,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewTrack(X[0].(ast.NoteList), X[1].(*ast.Track))
		},
	},
	ProdTabEntry{
		String: `Track : empty	<< (*ast.Track)(nil), nil >>`,
		Id:         "Track",
		NTType:     3,
		Index:      6,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return (*ast.Track)(nil), nil
		},
	},
	ProdTabEntry{
		String: `NoteList : ident PropertyList	<< ast.NewNoteList(X[0].(*token.Token).IDValue(), X[1].(ast.PropertyList)) >>`,
		Id:         "NoteList",
		NTType:     4,
		Index:      7,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewNoteList(X[0].(*token.Token).IDValue(), X[1].(ast.PropertyList))
		},
	},
	ProdTabEntry{
		String: `PropertyList : uint64 PropertyList	<< ast.NewPropertyList(X[0].(*token.Token), X[1].(ast.PropertyList)) >>`,
		Id:         "PropertyList",
		NTType:     5,
		Index:      8,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewPropertyList(X[0].(*token.Token), X[1].(ast.PropertyList))
		},
	},
	ProdTabEntry{
		String: `PropertyList : dot PropertyList	<< ast.NewPropertyList(X[0].(*token.Token), X[1].(ast.PropertyList)) >>`,
		Id:         "PropertyList",
		NTType:     5,
		Index:      9,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewPropertyList(X[0].(*token.Token), X[1].(ast.PropertyList))
		},
	},
	ProdTabEntry{
		String: `PropertyList : tuplet PropertyList	<< ast.NewPropertyList(X[0].(*token.Token), X[1].(ast.PropertyList)) >>`,
		Id:         "PropertyList",
		NTType:     5,
		Index:      10,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewPropertyList(X[0].(*token.Token), X[1].(ast.PropertyList))
		},
	},
	ProdTabEntry{
		String: `PropertyList : empty	<< ast.PropertyList(nil), nil >>`,
		Id:         "PropertyList",
		NTType:     5,
		Index:      11,
		NumSymbols: 0,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.PropertyList(nil), nil
		},
	},
	ProdTabEntry{
		String: `Command : "bar" ident	<< ast.NewCommand("bar", X[1].(*token.Token).IDValue()) >>`,
		Id:         "Command",
		NTType:     6,
		Index:      12,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewCommand("bar", X[1].(*token.Token).IDValue())
		},
	},
	ProdTabEntry{
		String: `Command : "play" ident	<< ast.NewCommand("play", X[1].(*token.Token).IDValue()) >>`,
		Id:         "Command",
		NTType:     6,
		Index:      13,
		NumSymbols: 2,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewCommand("play", X[1].(*token.Token).IDValue())
		},
	},
	ProdTabEntry{
		String: `Command : "end"	<< ast.NewCommand("end", "") >>`,
		Id:         "Command",
		NTType:     6,
		Index:      14,
		NumSymbols: 1,
		ReduceFunc: func(X []Attrib, C interface{}) (Attrib, error) {
			return ast.NewCommand("end", "")
		},
	},
}
